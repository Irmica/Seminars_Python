# №3.1[17]. Дан список чисел. Определите, сколько в нем встречается различных чисел.
# Примечание: Пользователь может вводить значения списка или список задан изначально.
# Примеры/Тесты:
# [1, 1, 2, 0, -1, 3, 4, 4] -> 6
# [1, 1, 2, 0, 1, 2, 1, 2] -> 3
# I вариант
# mylist = []
# n = input('Введите число. Для остановки введите "?": ')
# while n != "?":
#     if n not in mylist:
#         mylist.append(n)
#     n = input(
#         'Введите число. Для остановки введите "?": ')
# print(
#     f"Количество различных чисел равно {len(mylist)}")

# II вариант
# mylist = [1, 1, 2, 0, -1, 3, 4, 4]
# list1 = []
# for item in mylist:
#    if item not in list1:
#        list1.append(item)
# print(
#    f"Количество различных чисел равно {len(list1)}")

# -----------------------------------------------------------------------------
# №3.2[19]. Дана последовательность из N целых чисел и число K.
# Необходимо сдвинуть всю последовательность (сдвиг - циклический) на K элементов вправо, K – положительное число.
# Примечание: Пользователь может вводить значения списка или список задан изначально.
# Примеры/Тесты:
# Input: [1, 2, 3, 4, 5] k = 3
# Output: [4, 5, 1, 2, 3]

# import random


# n = int(input("Введите размер списка: "))
# numbers = []
# for i in range(n):
#     numbers.append(random.randint(0, 100))
# print(f"Сгенерированный список {numbers}")

# k = int(input("Введите число, на которое циклически необходимо сдвинуть цикл: "))
# if k > n:
#     k = k % n

# numbers_result = []
# for i in range(n):
#     numbers_result.append(numbers[(n-k+i) % n])
# print(
#     f"Циклически сдвинутый на {k} список {numbers_result}")

# --------------------------------------------------------------------------------------
# №3.3[21]. Напишите программу для печати всех уникальных значений в списке словарей.
# Примечание: Список словарей задан изначально. Пользователь его не вводит
# Обратите внимание, что в словарях может быть один или несколько элементов
# Примеры/Тесты:
# Input: [{"V": "S001", "X": "D009"}, {"V": "S002"}, {"VI": "S001"}, {"VI": "S005", "XI": "D011"},
# {"VII": " S005 "}, {" V ":" S009 "}, {" VIII ":" S007 ", "XII": "D001"}]
# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}
# [*] Усложнение. Проверку уникальности строк сделайте без учета пробелов до и после значимой части строки
# [**] Усложнение. Запишите алгоритм в одну строку, используйте Comprehension

# original_array_dictionary = [{"V": "S001", "X": "D009"}, {"V": "S002"}, {"VI": "S001"}, {
#     "VI": "S005", "XI": "D011"}, {"VII": " S005 "}, {" V ": " S009 "}, {" VIII ": " S007 ", "XII": "D001"}]

# # for item in original_array_dictionary:
# #     for key, value in item.items():
# #         print(value)
# #         original.add(value.strip())     
# original = {value.strip() for item in original_array_dictionary for key, value in item.items()}
    
# print(original)
#----------------------------------------------------------------------------------------------
# №3.4[23]. Дан список, состоящий из целых чисел. Напишите программу, которая сформирует список из 
# тех элементов, которые больше предыдущего (элемента с предыдущим номером)
# Примечание: Пользователь может вводить значения списка или список задан изначально.
# Примеры/Тесты:
# Input: [0, -1, 5, 2, 1]
# Output: [5]
# Input: [-2, -1, 5, 2, 3]
# Output: [-1, 5, 3]
# [*] Усложнение: Запишите алгоритм в одну строку, используйте Comprehension

# list_input = [0, -1, 5, 2, 1]
# list_output = [list_input[i+1] for i in range(len(list_input)-1) if list_input[i+1] > list_input[i]]

# for i in range(len(list_input)-1):
#     if list_input[i+1] > list_input[i]:
#         list_output.append(list_input[i+1])
# print(list_output)

#-------------------------------------------------------------------------------------------
# Задача 1. Дан список, содержащий искаженные данные с должностями и именами сотрудников:
# ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй',
# 'директор аэлита']

# Известно, что имя сотрудника всегда в конце строки.
# Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
# Подумать, как получить имена сотрудников из элементов списка, как привести их к корректному виду?
# Можно ли при этом не создавать новый список?

# list_input = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй',
#        'директор аэлита']

# for item in list_input:
#     print(f"Привет, {(item[(item.rstrip()).rfind(' ')+1:]).title()}!")

#---------------------------------------------------------------------------------
# Задача 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
# (добавить кавычку до и кавычку после элемента списка, являющегося числом)
# и дополнить нулём до двух целочисленных разрядов:

# Результат:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 
# 'была', '"', '+05', '"', 'градусов']

# Подумать, какое условие записать, чтобы выявить числа среди элементов списка?
# Как модифицировать это условие для чисел со знаком?
# - Задача обычной сложности: создайте новый список и заполните его нужными значениями,
# включая элементы-кавычки или измените существующий список, но не добавляйте элементы-кавычки.

#I вариант. Новый список + кавычки + нули.

# list_input = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# print(list_input)
# list_output = []
# for item in list_input:
#     if any(chr.isdigit() for chr in item):
#         if int(item)<10:            
#             item0 = item[:-1] + '0'+item[-1]
#             list_output.append('"')
#             list_output.append(item0)
#             list_output.append('"')
#         else:
#             list_output.append('"')
#             list_output.append(item)
#             list_output.append('"')
#     else:
#         list_output.append(item)   
# print(list_output)
      
# II вариант. Существующий список + нули.   
 
# list_input = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

# for i in range(len(list_input)):
#     if any(chr.isdigit() for chr in list_input[i]):
#         if int(list_input[i])<10:
#             list_input[i]= list_input[i][:-1] + '0'+list_input[i][-1]
# print(list_input)    

# * Задача повышенной сложности: измените существующий список, и добавьте элементы-кавычки.

list_input = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']


index_digit = []
for j in range(len(list_input)):
    if any(chr.isdigit() for chr in list_input[j]):
        if int(list_input[j])<10:
            list_input[j]= list_input[j][:-1] + '0'+list_input[j][-1]
        index_digit.append(j)    

for i in range(len(index_digit)):
    list_input.insert((index_digit[i] + 2*i), '"')
    list_input.insert((index_digit[i] + 2*i+2), '"')
    
print(list_input)  
result = ''
for k in range(len(list_input)):
    if list_input[k-1] == '"':
        result = result + list_input[k]
    # if list_input[k] == '"':
    #     result = result + list_input[k]
    # else:
        result = result + ' '+list_input[k]
print(result)

# Эта задача намного серьезнее, чем может сначала показаться.

# Сформировать из обработанного списка строку:

# в "05" часов "17" минут температура воздуха была "+05" градусов

# Вывести список и строку на экран.

# Примеры для тестирования:

#lst = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

#lst = ['примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура', 'воздуха', 'была', '5', 'градусов Цельсия', 'темп','воды','+2.0','градусов','Цельсия' ,'-2']